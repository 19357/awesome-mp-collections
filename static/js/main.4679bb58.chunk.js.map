{"version":3,"sources":["views/Home.tsx","router/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["REFURL","router","keyId","nanoid","path","exact","component","useState","list","setList","useEffect","a","fetch","res","json","data","getJson","className","Object","keys","map","item","index","title","subItem","href","link","target","rel","name","origin","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAeMA,EAAS,2ECLf,IAOeC,EAPW,CAAC,CACzBC,MAAOC,cACPC,KAAM,GACNC,OAAO,EACPC,UDGa,WAAgB,IAAD,EACJC,mBAAoB,IADhB,mBACrBC,EADqB,KACfC,EADe,KAW5B,OARAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACkBC,MAAMZ,GADxB,cACMa,EADN,gBAE8BA,EAAIC,OAFlC,OAEMC,EAFN,OAGEN,EAAQM,GAHV,4CADc,uBAAC,WAAD,wBAMdC,KACC,IAED,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,mBAAd,oEAEEC,OAAOC,KAAKX,GAAMY,KAAI,SAACC,EAAMC,GAAP,OACpB,sBAAKL,UAAU,kCAAf,UACE,qBAAKA,UAAU,cAAf,SACGT,EAAKa,GAAME,QAEd,oBAAIN,UAAU,8BAAd,SAEIT,EAAKa,GAAMb,KAAKY,KAAI,SAACI,GAAD,OAClB,qBAAIP,UAAU,kBAAd,UACE,mBAAGQ,KAAMD,EAAQE,KAAMC,OAAO,SAASC,IAAI,aAA3C,SAAyDJ,EAAQK,OAE/DL,EAAQM,OACN,sBAAMb,UAAU,wBAAhB,SAAyCO,EAAQM,SACjD,OAL+BN,EAAQE,aAPCJ,YEXjDS,MAnBf,WACE,OACE,qBAAKd,UAAU,qBAAf,SACE,cAAC,IAAD,UAEEhB,EAAOmB,KAAI,SAAAY,GAAK,OACd,cAAC,IAAD,CAEE5B,KAAM4B,EAAM5B,KACZC,MAAO2B,EAAM3B,MACbC,UAAW0B,EAAM1B,WAHZ0B,EAAM9B,eCIR+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4679bb58.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\n\ntype TResponseItem = {\n  title: string,\n  list: {\n    name: string,\n    link: string,\n    origin?: string\n  }[]\n}\n\ntype TResponse = {\n  [key: string]: TResponseItem\n}\n\nconst REFURL = 'https://public-data-1254963092.cos.ap-beijing.myqcloud.com/ref_list.json'\n\nexport default function Home(){\n  const [list, setList] = useState<TResponse>({})\n\n  useEffect(() => {\n    async function getJson() {\n      let res = await fetch(REFURL)\n      let data: TResponse = await res.json()\n      setList(data)\n    }\n    getJson()\n  }, [])\n  return (\n    <div className=\"home\">\n      <h3 className=\"text-center mb-3\">微信小程序教程参考</h3>\n      {\n        Object.keys(list).map((item, index) => (\n          <div className=\"card h5 mb-5 text-white bg-info\" key={index}>\n            <div className=\"card-header\">\n              {list[item].title}\n            </div>\n            <ul className=\"list-group list-group-flush\">\n              {\n                list[item].list.map((subItem) => (\n                  <li className=\"list-group-item\" key={subItem.link}>\n                    <a href={subItem.link} target=\"_blank\" rel=\"noreferrer\">{subItem.name}</a>\n                    {\n                      subItem.origin\n                      ? <span className=\"badge badge-info ml-3\">{subItem.origin}</span>\n                      : null\n                    }\n                  </li>\n                ))\n              }\n            </ul>\n        </div>\n        ))\n      }\n    </div>\n  )\n}","import {nanoid} from \"nanoid\"\nimport Home from \"../views/Home\"\n\ntype TRouter = {\n  keyId: string\n  path: string\n  exact: boolean\n  component: () => JSX.Element\n}\n\nconst router: TRouter[] = [{\n  keyId: nanoid(),\n  path: '',\n  exact: true,\n  component: Home\n}]\n\nexport default router","import { Route, Switch } from \"react-router-dom\";\nimport router from \"./router\";\n\nfunction App() {\n  return (\n    <div className=\"app container pt-3\">\n      <Switch>\n      {\n        router.map(route => (\n          <Route\n            key={route.keyId}\n            path={route.path}\n            exact={route.exact}\n            component={route.component}\n          />\n        ))\n      }\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}